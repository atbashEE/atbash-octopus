=== Custom Filters

Only filters which are descendant of +be.atbash.ee.security.octopus.filter.AdviceFilter+ can be used by Octopus (like from within the _securedURLs.ini_ file).

When you need to create a custom filter (first check the documentation about filters to see if the filter you need isn't available) you can start from some base classes. These classes are also used in the standard octopus filters.

If your filter requires a path configuration defined by the developer, like the permission name with +np[permission1]+, override the +requiresPathConfiguration()+ (defined within PathMatchingFilter) and return `true`.

Filters are a Web only concept, and thus are always dependent on the module _octopus-common-web_.

==== Custom user Filter

A user filter is typical a filter for authentication where the end user has the possibility to provide credentials when no authenticated user is detected.

Various filters are already available within octopus (KeyCloak, OAuth2, etc ...) but as a developer, you can create your custom version by extending +be.atbash.ee.security.octopus.authc.AbstractUserFilter+.

This Abstract user filter can be found within the _octopus_jsf8_ module.

==== Custom authentication filter

The authentication filters who define the current user based on the information available on the Request (like an authorization header with a JWT) are available for various systems (like MicroProfile JWT, Keycloak, ...)

This filters try ro authenticate the user based on the request info and in when this is not valid, a response with the appropriate status is returned.

These are mostly used for JAX-RS endpoints and when you need your custom filter you should start from the +be.atbash.ee.security.octopus.filter.RestAuthenticatingFilter+. (located in the _octopus-rest_ module).

In some rare situation where you don't want the status 401 when the request can't be authenticated, you can start from the +be.atbash.ee.security.octopus.filter.authc.AuthenticatingFilter+ which is located in the _octopus-common-web_ module.

==== Authorization filter

An authorization filter checks if the user has specific permissions before access is granted to the URL.  There are already various filters defined by default in octopus and with the CustomVoterFilter, almost any kind of authorization filter can be created by the developer.

In case you need another custom authorization filter, extend from the +be.atbash.ee.security.octopus.filter.authz.AuthorizationFilter+ class.

The base class for this type of filters is defined within the _octopus-common-web_ module as it can be used in JSF and JAX-RS environments.
