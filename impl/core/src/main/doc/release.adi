=== 0.4

. Integration with Keycloak (Client Credentials for Java SE, AuthorizationCode grant for Web, AccessToken for JAX-RS)
. Logout functionality for Web.
. Authentication events.
. Support for default user filter (no need to define user filter before authorizationFilter)

==== Important changes

. Primary Principal is always a _be.atbash.ee.security.octopus.subject.UserPrincipal_ instance.
. ++NamedPermission++ interface extends now ++Permission++.

This means that enums implementing NamedPermission must implement ++implies++. When there is no hierarchy between the values, the following method can be used (for _DemoPermission_ enum)

    public boolean implies(Permission permission) {
        return permission instanceof DemoPermission && permission.equals(this);
    }

. _be.atbash.ee.security.octopus.subject.PrincipalCollection_ is now a class and longer an interface.
. All filters used within filter chain definition (securedURLs.ini) must be an implementation of _be.atbash.ee.security.octopus.filter.AdviceFilter_

=== 0.3

. Authorization parts implementation (tags like securedComponent, interceptors for EJB/CDI, filters for URLs)
. AuthorizationToken to be able to extract AuthorizationInfo from token (MicroProfile, Offline, ...)
. Basic support for authorization annotation in Java SE (with _MethodAuthorizationChecker.checkAuthorization();_ )
. Declarative permissions for FXML views in JavaFX (POC)

=== 0.2

. Split into different modules (Core, JSON, Non-Web [Java SE, ...], Web [JSF, JAX-RS])
. Octopus-jwt-support for handling JSON supporting plain, JWS and JWE.
. Octopus-json is optimized smart-json code
. MicroProfile JWT Auth for Rest (POC)
. OfflineToken for standalone Java SE (POC)

=== 0.1

. POC integration Apache Shiro into Octopus
. Use of CDI as much as possible.

